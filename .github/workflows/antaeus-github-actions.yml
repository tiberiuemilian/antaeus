#  Inspired by docs from:
#  https://github.com/marketplace/actions/gradle-build-action

name: antaeus-ci-cd

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # allows running the workflow also manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: antaeus

jobs:
  ci:
    strategy:
      matrix:
#        os: [ ubuntu-latest, macos-latest, windows-latest ] # if needed, we can re-enable back build for all these platforms
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: gradle/gradle-build-action@v2
        name: Clean local build environment
        with:
          arguments: clean --warning-mode all
      - uses: gradle/gradle-build-action@v2
        name: Build application
        with:
          arguments: build --warning-mode all
      - uses: gradle/gradle-build-action@v2
        name: Run tests
        with:
          arguments: test --warning-mode all
      - uses: gradle/gradle-build-action@v2
        name: Build container image
        with:
          arguments: jibDockerBuild --warning-mode all
      - uses: actions/checkout@v2
        name: Log in to registry
          # This is where you will update the PAT to GITHUB_TOKEN
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
          run: |
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
            # Use Docker `latest` tag convention
            [ "$VERSION" == "master" ] && VERSION=latest
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
            docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION

